from alembic import context
from sqlalchemy import engine_from_config
from app.db.session import engine  # üîπ –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –≥–æ—Ç–æ–≤—ã–π –¥–≤–∏–∂–æ–∫
from app.models.users import Base  # üîπ –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –º–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ –º–æ–¥–µ–ª–µ–π

# –ú–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ –º–æ–¥–µ–ª–µ–π (–µ—Å–ª–∏ —É —Ç–µ–±—è –µ—Å—Ç—å Base.metadata)
target_metadata = Base.metadata

def run_migrations_online():
    """–ó–∞–ø—É—Å–∫ –º–∏–≥—Ä–∞—Ü–∏–π –≤ —Ä–µ–∂–∏–º–µ –æ–Ω–ª–∞–π–Ω (–æ–±—ã—á–Ω—ã–π, sync-—Ä–µ–∂–∏–º)."""
    with engine.connect() as connection:  # –ò—Å–ø–æ–ª—å–∑—É–µ–º –≥–æ—Ç–æ–≤—ã–π –¥–≤–∏–∂–æ–∫
        context.configure(connection=connection, target_metadata=target_metadata)
        with context.begin_transaction():
            context.run_migrations()

def run_migrations_offline():
    """–ó–∞–ø—É—Å–∫ –º–∏–≥—Ä–∞—Ü–∏–π –≤ –æ—Ñ—Ñ–ª–∞–π–Ω-—Ä–µ–∂–∏–º–µ."""
    context.configure(url=str(engine.url), target_metadata=target_metadata)
    with context.begin_transaction():
        context.run_migrations()

if context.is_offline_mode():
    run_migrations_offline()
else:
    run_migrations_online()
